// ‚úÖ FUN√á√ïES DE REDIRECIONAMENTO SIMPLIFICADAS
function mostrarRanking() { 
    console.log('üìä Redirecionando para Ranking...');
    window.location.href = '/Ranking/indexR.html'; 
}

function mostrarAmigos() { 
    console.log('üë• Redirecionando para Amigos...');
    window.location.href = '/Amigos/indexA.html'; 
}

function mostrarDesafios() { 
    console.log('üéØ Redirecionando para Desafios...');
    window.location.href = '/Desafios/indexD.html'; 
}

function mostrarProvas() { 
    console.log('üìù Redirecionando para Provas...');
    window.location.href = '/Provas/indexPr.html'; 
}

function mostrarConfig() { 
    console.log('‚öôÔ∏è Redirecionando para Configura√ß√£o...');
    window.location.href = '/Configura√ß√£o/indexC.html'; 
}

function mostrarPerfil() { 
    console.log('üë§ Redirecionando para Perfil...');
    window.location.href = '/Perfil/indexP.html'; 
}

function mostrarContato() { 
    console.log('üìû Redirecionando para Contato...');
    window.location.href = '/Contato/indexCo.html'; 
}

function mostrarNavegador() { 
    console.log('üåê Redirecionando para Navegador...');
    window.location.href = '/Navegador/indexN.html'; 
}

// ‚úÖ FUN√á√ÉO PARA MOSTRAR S√âRIE DO USU√ÅRIO
function mostrarSerieUsuario() {
    const serieUsuario = localStorage.getItem('usuarioSerie');

    console.log("üîç Buscando s√©rie no localStorage:");
    console.log("- usuarioSerie:", serieUsuario);

    console.log("üìä Todos os dados dispon√≠veis:", {
        nome: localStorage.getItem('usuarioNome'),
        ra: localStorage.getItem('usuarioRA'),
        serie: serieUsuario,
        pontuacao: localStorage.getItem('usuarioPontuacao'),
        desafios: localStorage.getItem('usuarioDesafios')
    });
    
    if (serieUsuario && serieUsuario !== "null" && serieUsuario !== "undefined") {
        document.getElementById("serie-aleatoria").textContent = serieUsuario;
        console.log("‚úÖ S√©rie exibida:", serieUsuario);
    } else {
        document.getElementById("serie-aleatoria").textContent = "S√©rie n√£o informada";
        console.log("‚ùå S√©rie n√£o encontrada no localStorage");
        
        console.log("üîç TODAS AS CHAVES DO LOCALSTORAGE:");
        for (let i = 0; i < localStorage.length; i++) {
            const key = localStorage.key(i);
            console.log(`- ${key}: ${localStorage.getItem(key)}`);
        }
    }
}

// ‚úÖ FUN√á√ÉO PARA CONFIGURAR BOT√ïES DO MENU
function configurarBotoesMenu() {
    console.log('üéÆ Configurando bot√µes do menu...');
    
    // Bot√µes principais (grid)
    const botoesPrincipais = [
        { seletor: '[onclick*="Ranking"]', funcao: mostrarRanking },
        { seletor: '[onclick*="Amigos"]', funcao: mostrarAmigos },
        { seletor: '[onclick*="Desafios"]', funcao: mostrarDesafios },
        { seletor: '[onclick*="Provas"]', funcao: mostrarProvas }
    ];

    botoesPrincipais.forEach(botao => {
        const elemento = document.querySelector(botao.seletor);
        if (elemento) {
            elemento.addEventListener('click', botao.funcao);
            console.log(`‚úÖ Bot√£o configurado: ${botao.seletor}`);
        } else {
            console.log(`‚ùå Bot√£o n√£o encontrado: ${botao.seletor}`);
        }
    });

    // Bot√µes de navega√ß√£o inferior
    const botoesNavegacao = [
        { seletor: '.Aba5', funcao: mostrarConfig },
        { seletor: '.Aba6', funcao: mostrarPerfil },
        { seletor: '.Aba7', funcao: mostrarContato },
        { seletor: '.Aba8', funcao: mostrarNavegador }
    ];

    botoesNavegacao.forEach(botao => {
        const elemento = document.querySelector(botao.seletor);
        if (elemento) {
            elemento.addEventListener('click', botao.funcao);
            console.log(`‚úÖ Navega√ß√£o configurada: ${botao.seletor}`);
        } else {
            console.log(`‚ùå Navega√ß√£o n√£o encontrada: ${botao.seletor}`);
        }
    });
}

// ‚úÖ FUN√á√ÉO VERIFICAR LOGIN
function verificarLogin() {
    const usuarioLogado = localStorage.getItem('usuarioLogado');
    const usuarioNome = localStorage.getItem('usuarioNome');
    
    console.log('üîê Verificando login...', {
        usuarioLogado,
        usuarioNome
    });
    
    if (!usuarioLogado || usuarioLogado !== 'true') {
        console.log('‚ùå Usu√°rio n√£o logado, redirecionando para login...');
        alert('‚ö†Ô∏è Voc√™ precisa fazer login primeiro!');
        window.location.href = '/Login/index.html';
        return false;
    }
    
    console.log('‚úÖ Usu√°rio logado:', usuarioNome);
    return true;
}

// ‚úÖ FUN√á√ÉO INICIALIZAR MENU
function inicializarMenu() {
    console.log("üöÄ Inicializando menu...");
    
    // Verificar se est√° logado
    if (!verificarLogin()) {
        return;
    }
    
    // Carregar dados do usu√°rio
    mostrarSerieUsuario();
    
    // Configurar eventos dos bot√µes
    configurarBotoesMenu();
    
    // Adicionar fun√ß√µes ao escopo global (para onclick no HTML)
    window.mostrarRanking = mostrarRanking;
    window.mostrarAmigos = mostrarAmigos;
    window.mostrarDesafios = mostrarDesafios;
    window.mostrarProvas = mostrarProvas;
    window.mostrarConfig = mostrarConfig;
    window.mostrarPerfil = mostrarPerfil;
    window.mostrarContato = mostrarContato;
    window.mostrarNavegador = mostrarNavegador;
    
    console.log("‚úÖ Menu inicializado com sucesso!");
    
    // Debug: mostrar estrutura do menu
    console.log("üèóÔ∏è Estrutura do menu carregada:");
    console.log("- Bot√µes principais:", document.querySelectorAll('.aba-container').length);
    console.log("- Bot√µes navega√ß√£o:", document.querySelectorAll('.Aba5, .Aba6, .Aba7, .Aba8').length);
    console.log("- Elemento s√©rie:", document.getElementById('serie-aleatoria'));
}

// ‚úÖ INICIALIZAR QUANDO O DOM ESTIVER PRONTO
document.addEventListener('DOMContentLoaded', function() {
    console.log("üìÑ DOM carregado - iniciando menu...");
    inicializarMenu();
});

// ‚úÖ FALLBACK: SE O DOM J√Å ESTIVER CARREGADO
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', inicializarMenu);
} else {
    inicializarMenu();
}
